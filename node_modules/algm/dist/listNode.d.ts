export declare class ListNode<T = number> {
    val: T | undefined;
    next: ListNode<T> | null;
    constructor(val?: T | undefined, next?: ListNode<T> | null);
}
/**
 * Encodes a list to a single string.
 *
 * @mermaid
 * graph LR
 *   1 --- 2
 *   2 --- 3
 *   3 --- 4
 *   4 --- 5
 * @example
 * ```js
 * serialize(root) // => '[1,2,3,4,5]'
 * ```
 */
export declare function serialize<T = number>(head: ListNode<T> | null): string;
export declare function serializeArr<T = number>(arr: (ListNode<T> | null)[]): string;
/**
 * Decodes your encoded data to list.
 */
export declare function deserialize<T = number>(originData: string): ListNode<T> | null;
export declare function deserializeArr<T = number>(originData: string): (ListNode<T> | null)[];
/**
 * reverse a list
 */
export declare function reverseList<T>(head: ListNode<T> | null): ListNode<T> | null;
