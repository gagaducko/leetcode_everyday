/**
 * Calculate the connectivity degree according to the undirected graph adjacency array.
 * @param {number[][]} adjArr adjacency array
 * @param {number} n vertex number
 * @category Graph
 * @mermaid
 * graph LR
 *   0 --- 4
 *   1 --- 2
 *   2 --- 3
 * @example
 * ```js
 * getConnectedNumByAdjArr([[4],[2],[1,3],[2],[0]]) // => 2
 * ```
 */
export declare function getConnectedNumByAdjArr(adjArr: number[][], n?: number): number;
/**
 * Calculate the connectivity degree according to the undirected graph adjacency matrix.
 * @category Graph
 * @param {number[][]} adjMatrix 邻接矩阵
 */
export declare function getConnectedNumByAdjMatrix(adjMatrix: number[][]): number;
/**
 * bipartite graph contains two vertex set X and Y
 * Reference:https://en.wikipedia.org/wiki/K%C5%91nig%27s_theorem_(graph_theory)
 * @param m the number of set X
 * @param adjArr the adjacency array of X
 * @param n the number of set Y
 */
export declare function minCoverVertices(m: number, adjArr: number[][], n?: number): number[];
